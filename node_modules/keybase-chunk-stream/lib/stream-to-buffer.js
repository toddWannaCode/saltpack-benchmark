// Generated by IcedCoffeeScript 108.0.11
(function() {
  var StreamToBuffer, stream,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  stream = require('stream');

  exports.StreamToBuffer = StreamToBuffer = (function(_super) {
    __extends(StreamToBuffer, _super);

    function StreamToBuffer(options) {
      this.bufs = [];
      StreamToBuffer.__super__.constructor.call(this, options);
    }

    StreamToBuffer.prototype._write = function(chunk, encoding, cb) {
      this.bufs.push(chunk);
      return cb();
    };

    StreamToBuffer.prototype.getBuffer = function() {
      return Buffer.concat(this.bufs);
    };

    return StreamToBuffer;

  })(stream.Transform);

}).call(this);
